<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - PC-Online Shop</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PC-Online Shop.styles.css" asp-append-version="true" />
    <style>
        /* Custom styles for navigation */
        .navbar-brand {
            font-size: 24px;
            font-weight: bold;
            color: #333;
        }

        .nav-link {
            font-size: 18px;
            font-weight: bold;
            color: #333;
            transition: all 0.3s ease;
            padding: 0.5rem 1rem;
        }

            .nav-link:hover {
                color: #007bff;
            }

        .navbar-nav {
            margin-left: auto; /* Push the buttons to the right */
        }

        .btn-signup,
        .btn-signin,
        .btn-signout {
            font-size: 18px;
            font-weight: bold;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 5px;
            padding: 0.5rem 1rem;
            margin-left: 10px;
            transition: all 0.3s ease;
        }

            .btn-signup:hover,
            .btn-signin:hover,
            .btn-signout:hover {
                background-color: #0056b3;
            }

        /* Style for the shopping cart icon */
        #shoppingCartIcon {
            cursor: pointer;
        }

            #shoppingCartIcon img {
                width: 30px;
                height: 30px;
                margin-right: 10px;
            }

        #shoppingCartItemCount {
            position: absolute;
            top: -10px;
            right: -10px;
            font-size: 12px;
        }

        /* Additional style for the Buy Now button */
        #buyNowButton {
            font-size: 18px;
            font-weight: bold;
            color: #fff;
            background-color: #28a745;
            border: none;
            border-radius: 5px;
            padding: 0.5rem 1rem;
            margin-left: 10px;
            transition: all 0.3s ease;
        }

            #buyNowButton:hover {
                background-color: #218838;
            }
    </style>

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">PC-Online Shop</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a id="signupLink" class="nav-link btn-signup" href="customer/signUp">Sign Up</a>
                        </li>
                        <li class="nav-item">
                            <a id="signinLink" class="nav-link btn-signin" href="/signIn">Sign In</a>
                        </li>
                        <li class="nav-item" id="signoutItem" style="display: none;">
                            <button id="signoutButton" class="nav-link btn-signout">Sign Out</button>
                        </li>
                    </ul>
                    <!-- Shopping cart icon -->
                    <div id="shoppingCartIcon">
                        <img src="path_to_shopping_cart_icon" alt="Shopping Cart">
                        <div id="shoppingCartItemCount" class="badge badge-pill badge-primary">0</div>
                    </div>
                    <!-- Shopping cart dropdown -->
                    <div id="shoppingCartContainer" style="display: none;">
                        <div id="shoppingCartContent" @if(Model != null && Model.Cart != null && Model.Cart.products != null) { <text>data-products="@Html.Raw(Json.Serialize(Model.Cart.products))"</text> }>
                            <table class="products-table">
                                <thead>
                                    <tr>
                                        <th>Product Name</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.Cart != null && Model.Cart.products != null && Model.Cart.products.Count > 0)
                                    {
                                        @foreach (var product in Model.Cart.products)
                                        {
                                            <tr>
                                                <td>@product.Category @product.brand</td>
                                                <td>$@product.Price</td>
                                                <td>
                                                    <input id="product-quantity-@product.Id" type="number" class="product-quantity" min="1" max="@product.StockQuantity" value="@product.requiredQuntity">
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div hidden>
                        <div id="dummyHide">
                            @{
                                if (Model != null && Model.Cart != null && Model.Cart.products != null && Model.Cart.products.Count > 0)
                                {
                                    string productIds = "";
                                    foreach (var product in Model.Cart.products)
                                    {
                                        productIds += product.Id + ",";
                                    }
                                    // Remove the trailing comma
                                    productIds = productIds.TrimEnd(',');
                                    @productIds
                                }
                            }
                        </div>
                    </div>

                    <!-- Buy Now button -->
                    <button id="buyNowButton">Buy Now</button>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - PC-Online Shop - By: Seraj Ag</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        $(document).ready(function () {
            var token = localStorage.getItem('token');
            if (token) {
                var payload = token.split('.')[1];
                var decodedPayload = atob(payload);
                var claims = JSON.parse(decodedPayload);
                var nameClaimRegex = new RegExp('.*\/name$');
                var userName;
                for (var key in claims) {
                    if (nameClaimRegex.test(key)) {
                        userName = claims[key];
                        break;
                    }
                }
                if (userName) {
                    $('#signupLink').hide();
                    $('#signinLink').hide();
                    $('#signoutItem').show();
                    $('.navbar-nav').append('<li class="nav-item"><span class="nav-link">Welcome ' + userName + '</span></li>');
                    $('#shoppingCartIcon').show();
                } else {
                    console.log("Name claim not found in token.");
                }
            } else {
                console.log("Token not found in local storage.");
            }
            $('#signoutButton').click(function () {
                localStorage.removeItem('token');
                window.location.href = '/signIn';
            });
            $('#shoppingCartIcon').click(function () {
                $('#shoppingCartContainer').toggle();
            });
        });

        // Your existing buyProduct function
        function buyProduct2(products) {
             console.log("data: "+ data);
            // Retrieve token from local storage
            const token = localStorage.getItem('token');

            // Define the headers with Content-Type
            const headers = {
                'Content-Type': 'application/json',
            };

            // If token is available, include it in the headers
            if (token) {
                headers['Authorization'] = `Bearer ${token}`;
            }

            // Extract product IDs from the provided products
            const productIds = [];
            if (products && products.length > 0) {
                products.forEach(product => {
                    productIds.push(product.Id);
                });
            }

            // Define the data you want to send in the request body
            const data = { ProductIds: productIds };

            console.log("data: "+ data);
            // Make an HTTP POST request to your API endpoint
            fetch('/customer/initiateOrder', {
                method: 'POST',
                headers: headers,
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json(); // assuming the response contains JSON data
                })
                .then(data => {
                    // Once the order is initiated, navigate to the CreateOrder view
                    window.location.href = '/customer/order/' + data.orderId; // Redirect to the CreateOrder view with the orderId
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                    // Handle error
                    // For example, show an error message to the user
                });
        }

        // Add event listener to the button
        document.getElementById('buyNowButton').addEventListener('click', function () {
           
            const productIdsElement = document.getElementById('dummyHide');

            if (productIdsElement) {
             
              let productIdsText = productIdsElement.innerText;

              const productIdsArray = productIdsText.split(',')
                .map(id => id.trim()) 
                .filter(id => id); 

              
                const token = localStorage.getItem('token');

               
                const headers = {
                    'Content-Type': 'application/json',
                };

               
                if (token) {
                    headers['Authorization'] = `Bearer ${token}`;
                }

                const data = { ProductIds: productIdsArray };

            
                fetch('/customer/initiateOrderFromCart', {
                    method: 'POST',
                    headers: headers,
                    body: JSON.stringify(data)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json(); // assuming the response contains JSON data
                    })
                    .then(data => {
                        // Once the order is initiated, navigate to the CreateOrder view
                        window.location.href = '/customer/order/' + data.orderId; // Redirect to the CreateOrder view with the orderId
                    })
                    .catch(error => {
                        console.error('There was a problem with the fetch operation:', error);
                        // Handle error
                        // For example, show an error message to the user
                    });
            } else {
              console.warn("Element with ID 'dummyHide' not found.");
            }
        });
    </script>
</body>
</html>
